services:

  inner-circle-items-db:
    image: postgres:14
    container_name: inner-circle-items-db
    profiles: ['MockForDevelopment', 'MockForPullRequest', 'db-only']
    environment:
      POSTGRES_DB: inner-circle-items-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 10011:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - inner-circle-items-network

  inner-circle-items-api:
    container_name: inner-circle-items-api
    profiles: ['default']
    depends_on:
      inner-circle-items-db:
        condition: service_healthy
    build:
      dockerfile: ./Api/Dockerfile
      context: .
    ports:
      - 10012:80
    networks:
      - inner-circle-items-network

  inner-circle-items-api-for-e2e:
    container_name: 'inner-circle-items-api-for-e2e'
    profiles: ['MockForPullRequest']
    extends:
      service: inner-circle-items-api
    environment:
      - ASPNETCORE_ENVIRONMENT=MockForPullRequest
      - ASPNETCORE_HTTP_PORTS=80

  inner-circle-items-karate-tests:
    container_name: 'inner-circle-items-karate-tests'
    profiles: ['MockForPullRequest']
    build:
      dockerfile: KarateDockerfile
      context: .
    depends_on:
      - inner-circle-items-api-for-e2e
    command: ["karate", "/karate"]
    volumes:
      - .:/karate
    environment:
      API_ROOT_URL: "http://inner-circle-items-api-for-e2e"
      SHOULD_USE_FAKE_EXTERNAL_DEPENDENCIES: "true"
    networks:
      - inner-circle-items-network

networks:
  inner-circle-items-network:
  